/* IoT Door Opening Detector â€“ ESP32 + FC-51 IR + Buzzer + LEDs + Arduino IoT Cloud
   - Detects door/motion via IR sensor (FC-51)
   - Sounds a buzzer and toggles a status LED when triggered
   - Syncs a cloud "led" property to control a blue LED remotely
   - Requires Arduino IoT Cloud to generate thingProperties.h
*/

#include "thingProperties.h"   // Generated by Arduino IoT Cloud (Device/Thing/Variables)
#include <Arduino.h>

// -------- Pin definitions (adjust to your wiring) --------
const int IRPin      = 27;  // FC-51 OUT
const int buzzerPin  = 26;  // Active buzzer
const int ledGreen   = 25;  // Status LED (local alert)
const int ledBlue    = 33;  // Cloud-controlled LED ("led" property)

// If your FC-51 outputs HIGH on detection, set this to false
const bool IR_ACTIVE_LOW = true;

// Cloud variable "led" is declared in thingProperties.h
// Callback prototype there: void onLedChange();

void setup() {
  Serial.begin(9600);
  delay(300);

  pinMode(IRPin,     INPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(ledGreen,  OUTPUT);
  pinMode(ledBlue,   OUTPUT);

  digitalWrite(buzzerPin, LOW);
  digitalWrite(ledGreen,  LOW);
  digitalWrite(ledBlue,   LOW);

  // ----- Arduino IoT Cloud -----
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  // Keep the IoT Cloud connection alive and process property updates
  ArduinoCloud.update();

  // Read IR motion/door sensor
  int raw = digitalRead(IRPin);
  bool detected = IR_ACTIVE_LOW ? (raw == LOW) : (raw == HIGH);

  if (detected) {
    // Local alert: buzzer + green LED for 1 second
    digitalWrite(buzzerPin, HIGH);
    digitalWrite(ledGreen, HIGH);
    Serial.println("Door event detected");

    delay(1000);

    digitalWrite(buzzerPin, LOW);
    digitalWrite(ledGreen, LOW);
  }

  delay(50);
}

// Cloud callback: toggle blue LED when the "led" property changes
void onLedChange() {
  digitalWrite(ledBlue, led ? HIGH : LOW);
}
